<!doctype html public "-//IETF//DTD HTML//EN//2.0">
<html><head>
<title>t3.if</title>
<link rev="made" href="mailto:steve@rsv.ricoh.com">
</head><body>
<h1>InterForm test file t3.if</h1>

if true is working
if false is working

<h2>Test &lt;test&gt; operation</h2>

should be '': '' (completely empty)
should be '': '' (space)
should be '1': '1' ( not blanks )
should be '': '' text( )
should be '1': '1' text( not blanks )
should be '1': '1' zero( 0 )
should be '1': '1' zero( xxx )
should be '': '' zero( 100 )
should be '': '' zero( -100 )
should be '': '' positive( 0 )
should be '1': '1' positive( 100 )
should be '': '' positive( -100 )
should be '': '' negative( 0 )
should be '': '' negative( 100 )
should be '1': '1' negative( -100 )
should be '': '' match
should be '1': '' match
should be '': ''
should be '1': '1'


<h2>Test problems with empty quotes inside quotes</h2>
<blockquote>
 should be 'xxyyzz': 'xxyyzz'
 should be 'xxzz': 'xxzz'
 should be 'aabbcc': 'aabbcc'
 should be 'aabb': 'aaa<xxx></xxx>bbb'
 should be 'xxxyyyzzz': 'xxxyyyzzz'
 should be 'xxxyyy..': xxxyyy<bar>..'
</blockquote>

<h2>Test arithmetic</h2>

should be 6: 6
should be 6: 6

should be 6: 6
should be 6: 6

should be 6: 6
should be 6: 6

<h2>Test set, get entities</h2>

foo set to "value of foo"
get: "value of foo"
entity: "value of foo"
<!-- need to use test here to keep variable stuff out of output: -->
date: 1
fileName: "t3.if" should be "t3.if"
filePath: "./t3.if" should be "./t3.if"

<h2>Test loops</h2>

Simple: a b c <br>
&amp;li; outside repeat: c<br>
Empty: c <br>
Nested: a x y b x y c x y <br>
value of entity at end: 'y'

Foreach: <em>a b c </em><br>
Foreach: <ol><li>a </li><li>b </li><li>c </li></ol><br>


<h2>Parsed entities</h2>

set bar: 
bar: should be 'foo': 'foo'
<!-- at one point, entity values were getting appended to: -->
Should be 1: '1'
Should be 'foo': 'foo'
Should be 1: '1'
Should be 'foo': 'foo'
Should be 1: '1'
Should be 'foo': 'foo'

Entity used as list for repeat; expanded in attribute:

foo <foo bar="foo">...</foo>
bar <foo bar="bar">...</foo>
baz <foo bar="baz">...</foo>



<h2>Text processing</h2>

THIS is a _test_ *of* add="markup"

<h2>Actor information</h2>

attrs: empty handle="Get" tag="get"<br>
syntax: <get [name="name"] 
[pia|agent|form|trans|env|element[tag=tag]|local|global
| [file="filename"|href="url"|[file|href] name="string" ] >
<br>
dscr: Get value of NAME, optionally in PIA, ENV, AGENT, FORM, 
ELEMENT, TRANSaction, or LOCAL or GLOBAL entity context.
Default is to start with the local entity table and move up the
stack until name is found.  Returns "" if name does not exist in
specified context.  Elements of complex data structures can be accessed
using a dotted notation "foo.bar" returns the bar element of foo.
Default is the generic lookup that includes paths.
If FILE or HREF specified, functions as <read>.
<br>
...  Get value of NAME, optionally in PIA, ENV, AGENT, FORM, 
ELEMENT, TRANSaction, or LOCAL or GLOBAL entity context.
Default is to start with the local entity table and move up the
stack until name is found.  Returns "" if name does not exist in
specified context.  Elements of complex data structures can be accessed
using a dotted notation "foo.bar" returns the bar element of foo.
Default is the generic lookup that includes paths.
If FILE or HREF specified, functions as &lt;read&gt;.


attrs: parsed handle="Set" tag="set"<br>
syntax: <set name="name" [copy]
[ pia | agent [hook] | trans [feature] | env 
| [element [tag=ident] | entity [global | local] ]>...</set>
<br>
dscr: set NAME to CONTENT, optionally in PIA, AGENT, TRANSaction, 
ENVironment, ELEMENT, or ENTITY context.  ENTITY may define
a LOCAL or GLOBAL binding.   Default is to replace the lowest current binding
and create global binding if none exists.
ELEMENT may have a TAG.  TRANSaction item
may be FEATURE.  AGENT may be a HOOK (parsed InterForm) or string. 
Optionally COPY content as result.
<br>

<hr>
<b>Copyright &copy; 1997 Ricoh Silicon Valley</b><br>
</body></html>
