#!/usr/bin/python

# Copy JPEG images from a PCMCIA card from a camera
# into directories and files to be read by a PhotoNet
# PIA agent

# Marko Balabanovic
# 17 Aug 1998

import sys, string, os

os.umask(0)

# Only argument is the source directory for the images
SourceDir = sys.argv[1]
MountPoint = sys.argv[1]

SourceFiles = os.listdir(SourceDir)

# With new camera (RDC-4300) images are in a subdirectory
if len(SourceFiles) == 1 and os.path.isdir(os.path.join(SourceDir,SourceFiles[0])):
	SourceDir = os.path.join(SourceDir,SourceFiles[0])
	SourceFiles = os.listdir(SourceDir)


AGENT_BASE_DIR = "/pia1/home/marko/.pia/PhotoNet/"
OLD_AGENT_BASE_DIR = "/home/pia/.pia/Photo_Album/"

ImageFiles = []
for S in SourceFiles:
	
	(Name,Ext) = os.path.splitext(S)
	if Ext == ".j6i" or Ext == ".jpg":
		ImageFiles.append(S,Name,Ext)


# Reserve some photo ID numbers for the incoming pictures
f = open(AGENT_BASE_DIR+"photoid.latest","r")
OldNumber = string.atoi(string.strip(f.read()))
f.close()
NewNumber = OldNumber + 1
f = open(AGENT_BASE_DIR+"photoid.latest","w")
f.write(`OldNumber + len(ImageFiles)`)
f.close()

# Keep track of the new photo IDs so a user can claim them
NewIDs = "<photoids>"

for (S,Name,Ext) in ImageFiles:

	# Copy jpeg file over and resize it
	f = open(SourceDir+"/"+S,"r")
	LocalFileBase = AGENT_BASE_DIR+"localphotos/"+`NewNumber`
	LocalFileName = LocalFileBase + ".jpg"

	# Pictures from the RDC-2 need to be converted to JPEG
	# and resized
	if Ext == ".j6i":
		g = os.popen("djpeg | pnmscale -width 640 -height 480 | cjpeg -quality 85 > "+LocalFileName,"w")
		# g = open(LocalFileName,"w")
		f.read(172) # Omit J6I header
		try:
			g.write(f.read())
		except:
			# For some reason this pipe always breaks at the end
			pass
		try:
			g.close()
		except:
			pass

	# Pictures from the RDC-4300 are already in JPEG format
	else:
		g = open(LocalFileName,"w")
		g.write(f.read())
		g.close()

	f.close()

	# Make another copy for the old Photo_Album script
	f = open(LocalFileName,"r")
	g = open(OLD_AGENT_BASE_DIR+"/FromMarkosScript/"+Name+".jpg","w")
	g.write(f.read())
	g.close()
	f.close()

	# Erase original
	# (Leave this to the PERL script from Photo_Album agent)
	#try:
	#	os.unlink(SourceDir+"/"+S)
	#except:
		# Could not erase, proceed anyway
	#	pass

	# Generate a thumbnail
	LocalThumbnail = LocalFileBase + "t.gif"
	r = os.system("djpeg < " + LocalFileName + " | pnmscale -width 64 -height 48 | ppmquant 256 | ppmtogif > "+LocalThumbnail)

	# Write out corresponding metadata file
	Metadata = "<photo><photoid>" + `NewNumber` + "</photoid>\n"
	NewIDs = NewIDs + "<photoid>" + `NewNumber` + "</photoid>\n"
	Metadata = Metadata + "<localfile>" + LocalFileName + "</localfile>\n"
	Metadata = Metadata + "<localurl>/PhotoNet/localphotos/" + `NewNumber` + ".jpg</localurl>\n"

	if r==0:
		# Thumbnail generation succeeded
		Metadata = Metadata + "<localthumbnailfile>" + LocalThumbnail + "</localthumbnailfile>\n"
		Metadata = Metadata + "<localthumbnailurl>/PhotoNet/localphotos/" + `NewNumber` + "t.gif</localthumbnailurl>\n"
		Metadata = Metadata + "<localthumbnailheight>48</localthumbnailheight><localthumbnailwidth>64</localthumbnailwidth>\n"


		# Make another copy for the old Photo_Album script
		f = open(LocalThumbnail,"r")
		g = open(OLD_AGENT_BASE_DIR+"/FromMarkosScript/"+Name+".small.gif","w")
		g.write(f.read())
		g.close()
		f.close()

	Metadata = Metadata + "</photo>\n"

	f = open(AGENT_BASE_DIR+"metadata/" + `NewNumber` + ".xml","w")
	f.write(Metadata)
	f.close()
	
	NewNumber = NewNumber + 1

NewIDs = NewIDs + "</photoids>"

# Finally write the list of new IDs created
f = open(AGENT_BASE_DIR+"newids.xml","w")
f.write(NewIDs)
f.close()

# And a little indicator file to tell the PIA that this has happened
f = open(AGENT_BASE_DIR+"newids","w")
f.write("<new-photos-present>\n");
f.close()

# Unmount the source directory when done
# (Leave this to the PERL script from Photo_Album agent)
# r = os.system("umount "+SourceDir)

r = os.system("/home/pia/pia/bin/copy_j6i.Album "+MountPoint+" "+SourceDir+" "+sys.argv[2])



	

		

