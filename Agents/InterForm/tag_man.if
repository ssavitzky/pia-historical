<!doctype html public "-//IETF//DTD HTML//EN//2.0">
<html><head>
<title>Standard Tagset Manual</title>
<link rev="made" href="mailto:steve@crc.ricoh.com"></link>
</head><body>
<h1>Standard Tagset Manual</h1>

<hr><!-- Standard header for if_demo files -->
&lt;<b>URL:</b> <a href="&url;">&url;</a>&gt;<br>
<b>Source:</b> <a href="/PIA/Agents/&agentName;/&fileName;">&fileName;</a>
&lt;<a href="file:&filePath;"><b>file:</b> &filePath;</a>&gt;
<hr>
 
<h3>About This Manual:</h3>

This is the <em>official</em> manual for the Standard Tagset.  It is an active
document, generated by an InterForm in the <a href="home.if">InterForm
Demonstration agent</a>.  A non-active version can be found as part of the <a
href="/PIA/Doc/Manuals/InterForm/index.html">InterForm Manual</a>.  In most
cases, that will be faster.<p>

The order of presentation approximates that in the source file
<code><a href="/PIA/src/lib/perl/IF/Actors.pm">IF::Actors</a></code>.
<p>

<!-- Define some utility actors, used mainly for layout: -->

<!-- The manual, and actor names linked to it -->
<set entity name=IFman>/PIA/Doc/Manuals/InterForm/index.html</set>
<actor name=man dscr="Link an actor name to the manual">
  <set entity name=content><get name=content></set>
  <a href="&IFman;#&content;">&content;</a>
</actor>
<actor name=mtag dscr="``tag'' for actor named in CONTENT, pointing to manual">
  <set entity name=n><get name=content></set>
  &lt;<strong><man>&n;</man></strong> <actor-attrs name="&n;"> &gt;
</actor>

<!-- Name anchors in THIS page, and links to them. -->
<actor name=toc dscr="Link an actor name to this page">
  <set entity name=content><get name=content></set>
  <a href="#&content;">&content;</a>
</actor>

<!-- The demo page, and actor names linked to it -->
<set entity name=IFdemo>/if_demo/demo.if</set>
<actor name=demo dscr="Link an actor name to the manual">
  <set entity name=content><get name=content></set>
  <a href="&IFdemo;#&content;">&content;</a>
</actor>
<actor name=atag dscr="``tag'' for actor named in CONTENT">
  <set entity name=n><get name=content></set>
  &lt;<strong><demo>&n;</demo></strong> <actor-attrs name="&n;"> &gt;
</actor>

<actor name=name dscr="Make a name anchor">
  <set entity name=content><get name=content></set>
  <a name="&content;">&content;</a>
</actor>
<actor name=atoc dscr="``tag'' for actor named in CONTENT">
  <set entity name=n><get name=content></set>
  &lt;<strong><toc>&n;</toc></strong> <actor-attrs name="&n;"> &gt;
</actor>

<!-- === eventually put syntax inside the tag; attrs outside === -->
<actor name=adscr dscr="Make an actor description
cross-referenced to the manual.">
  <set entity name=list><get name=content></set>
  <dl foreach list="&list;">
    <dt> <atag>&li;</atag>
    <dd> <add-markup><actor-dscr name="&li;"></add-markup>
  </dl>
</actor>
<actor name=alist dscr="Make a list of actor tags">
  <set entity name=list><get name=content></set>
<ul foreach list="&list;">
    <li> <atoc>&li;</atoc>
</ul>
</actor>

<h3>Actor Index</h3>
<alist>&actorNames;</alist>
  
<h3>Format</h3>

Each major section of this manual is set off by a horizontal rule, followed by
a list of links to the individual actors described in it.  Each actor
description consists of a brief formatted description followed by an informal
discussion.   <p>

<blockquote>
Material that is less important (for example, implementation
and design notes) is indented, like this.
</blockquote>

The formatted description looks like an HTML start tag; the name of the actor
is a link to the examples for that actor in <a
href="/InterForm/demo.if">/InterForm/demo.if</a>.  The attributes
in this tag are those that would be used to define the actor being described.
This is followed by a brief text description in which the names of attributes
in an <em>invocation</em> of the actor are presented in boldface.  The special
attributes <add-markup>ELEMENT</add-markup> and
<add-markup>CONTENT</add-markup> represent the entire invocation and its
content, respectively.  Actors with names that start with a letter match tags
with that name; actors with names that start with a '<code>-</code>' have more
complicated match criteria.<p>

<blockquote>
  There is a slight ambiguity in the text description between an attribute and
  its associated value.  It is usually clear from context.
</blockquote>

<blockquote>
  The description strings come from the value of the
  <add-markup>DSCR</add-markup> attribute of each actor; these are part of the
  <em>source code</em> that defines the actor, so they are usually the most
  up-to-date description available.
</blockquote>

<hr>
<h2>Actor Definition and Control</h2>
<alist>actor actor-attrs actor-dscr</alist>

<h3><name>actor</name></h3>
<adscr>actor</adscr>
  

<h3><name>actor-attrs</name></h3>
<adscr>actor-attrs</adscr>

<h3><name>actor-dscr</name></h3>
<adscr>actor-dscr</adscr>

<h2>Expansion Control</h2>
<alist>expand protect protect-result</alist>

<h3><name>expand</name></h3>
<adscr>expand</adscr>

<h3><name>protect</name></h3>
<adscr>protect</adscr>

<h3><name>protect-result</name></h3>
<adscr>protect-result</adscr>

This protects, not <add-markup>CONTENT</add-markup>, but the result of
<em>expanding</em> <add-markup>CONTENT</add-markup>.  It can be used, for
example, to prevent further processing of a file or computed text that
contains markup. <p>


<hr>
<h2>Name Bindings</h2>

<alist>get set</alist>

<h3><name>get</name></h3>
<adscr>get</adscr>
  

<h3><name>set</name></h3>
<adscr>set</adscr>

<hr>
<h2>Control Structure</h2>

<alist>if then else repeat -foreach-</alist>

<h3><name>if</name></h3>
<adscr>if</adscr>

<h3><name>then</name></h3>
<adscr>then</adscr>

<h3><name>else</name></h3>
<adscr>else</adscr>


<h3><name>repeat</name></h3>
<adscr>repeat</adscr>


<h3><name>-foreach-</name></h3>
<adscr>-foreach-</adscr>

<hr>
<h2>Tests</h2>

<alist>test equal sorted</alist>

<h3><name>test</name></h3>
<adscr>test</adscr>

<h3><name>equal</name></h3>
<adscr>equal</adscr>

<h3><name>sorted</name></h3>
<adscr>sorted</adscr>

<hr>
<h2>Numeric Processing</h2>

<hr>
<h2>List Processing</h2>

<hr>
<h2>String Processing</h2>

<alist>add-markup pad trim</alist>

<h3><name>add-markup</name></h3>
<adscr>add-markup</adscr>

Add markup to a text string (content type <code>text/plain</code>), using
conventions commonly used in e-mail, Usenet news, and programming.
Particularly useful for strings meant to go into attributes, since some
browsers and HTML parsers choke on markup inside attributes.<p>

<blockquote>
  Originally developed for the descriptions in the
  <add-markup>DSCR</add-markup> attributes of actors.
</blockquote>

<h3><name>pad</name></h3>
<adscr>pad</adscr>

<h3><name>trim</name></h3>
<adscr>trim</adscr>


<hr>
<h2>PIA Agents</h2>

<alist>agent-home agent-install agent-list agent-options agent-remove
       agent-running agent-set-options</alist>

<dl>
  <dt> Note:
  <dd> Some of these actors were defined before more general mechanisms were
       developed.  They are still useful, however, since they are usually
       shorter and faster than the general method.
</dl>

<h3><name>agent-home</name></h3>
<adscr>agent-home</adscr>

<h3><name>agent-install</name></h3>
<adscr>agent-install</adscr>

<h3><name>agent-list</name></h3>
<adscr>agent-list</adscr>

<h3><name>agent-options</name></h3>
<adscr>agent-options</adscr>

<h3><name>agent-remove</name></h3>
<adscr>agent-remove</adscr>

<h3><name>agent-running</name></h3>
<adscr>agent-running</adscr>

<h3><name>agent-set-options</name></h3>
<adscr>agent-set-options</adscr>

<hr>
<h2>OS Operations</h2>

<h3><name>os-command</name></h3>

<h3><name>os-command-results</name></h3>


<hr>
<h2>Primitive Actions</h2>

<h3><name>-eval-perl-</name></h3>



<hr>
<b>Copyright &copy; 1997 Ricoh California Research Center</b><br>
<b>$Id$</b><br>
<address><a href="http://www.crc.ricoh.com/people/steve/steve.html"
         >Stephen R. Savitzky</a> &lt;<a href="mailto:steve@crc.ricoh.com"
         >steve@crc.ricoh.com</a>&gt;</address>
</body></html>
